#==============================================================================
# Build the Go Binary.
#==============================================================================
FROM golang:1.17.5 as build_app
# Do not bind any CGO into the binary
ENV CGO_ENABLED 0
# Version control reference
ARG VCS_REF

# Create a location in the container for the source code. Using the
# default GOPATH location.
RUN mkdir -p /service

#===if not using go mod vendor===
# Copy the module files first and then download the dependencies. If this
# doesn't change, we won't need to do this again in future builds.
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

#===using go mod vendor===
# Copy the source code into the container.
WORKDIR /service
COPY . .

# Build the admin tool so we can have it in the container. This should not change
# often so do this first.
# setting build tags to "${VCS_REF}"
WORKDIR /service/app
RUN go build -ldflags "-X main.build=${VCS_REF}"

#==============================================================================
# Run the Go Binary in Alpine.
#==============================================================================
FROM alpine:latest
ARG BUILD_DATE
ARG VCS_REF
COPY --from=build_app /service/app /service/app
WORKDIR /service/app
CMD ["./app"]

EXPOSE 8080

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="app" \
      org.opencontainers.image.authors="JT Forward" \
      org.opencontainers.image.source="" \
      org.opencontainers.image.revision="${VCS_REF}" \